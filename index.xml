<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Google Style Guides</title><link>https://gocn.github.io/styleguide/</link><description>Recent content on Google Style Guides</description><generator>Hugo -- gohugo.io</generator><language>zh</language><atom:link href="https://gocn.github.io/styleguide/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://gocn.github.io/styleguide/docs/01-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gocn.github.io/styleguide/docs/01-overview/</guid><description> Overview #</description></item><item><title/><link>https://gocn.github.io/styleguide/docs/02-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://gocn.github.io/styleguide/docs/02-guide/</guid><description>Go Style Guide # Style principles # There are a few overarching principles that summarize how to think about writing readable Go code. The following are attributes of readable code, in order of importance:
Clarity: The codeâ€™s purpose and rationale is clear to the reader. Simplicity: The code accomplishes its goal in the simplest way possible. Concision: The code has a high signal-to-noise ratio. Maintainability: The code is written such that it can be easily maintained.</description></item></channel></rss>